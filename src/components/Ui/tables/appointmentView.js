import React from "react";
import { Button, Box } from "@material-ui/core";
import { useRouter } from "next/router";
import _ from "lodash";
import { GET_SINGLE_LEAD } from "../../../apollo/queries/leads";
import { useLazyQuery } from "@apollo/client";
import moment from "moment";

const AppointmentViewTable = ({ onClose, appointment }) => {
  const [getSingleLead, { data: dataGSL, loading: loadingGSL }] =
    useLazyQuery(GET_SINGLE_LEAD);
  const [leadData, setLeadData] = React.useState(null);

  const getLastArray = (arr, isItem) => {
    if (!_.isEmpty(arr)) {
      if (arr.length <= 1) {
        if (isItem) {
          return arr[0];
        } else {
          return arr[0].name;
        }
      } else {
        return isItem ? arr.slice(-1)[0] : arr.slice(-1)[0].name;
      }
    }
  };

  React.useEffect(async () => {
    if (!_.isEmpty(appointment._leadId)) {
      await getSingleLead({
        variables: {
          leadId: appointment._leadId,
        },
        fetchPolicy: "network-only",
      });
    }
  }, [appointment]);

  React.useEffect(() => {
    if (!_.isEmpty(dataGSL)) {
      const { getSingleLead } = dataGSL;
      const lead = getSingleLead;
      const data = {
        id: lead._id,
        userId: lead.userId,
        leadDate: !_.isEmpty(lead.leadDate)
          ? moment(lead.leadDate.timestamp).format("DD-MMM-YYYY")
          : "-",
        leadId: lead.leadId,
        creditTo: !_.isEmpty(lead.creditedSalesTeam)
          ? lead.creditedSalesTeam[0].name
          : "-",
        generatedBy: !_.isEmpty(lead.generatedSalesTeam)
          ? lead.generatedSalesTeam[0].name
          : "-",
        studioId: !_.isEmpty(lead.studio) ? lead.studio[0].name : "-",
        name: lead.firstName + " " + lead.lastName,
        phone: `+ ${lead.countryCode}${lead.phone}`,
        source: !_.isEmpty(lead.source) ? lead.source[0].name : "",
        persona: !_.isEmpty(lead.persona) ? lead.persona[0].name : "",
        estimatedValue: lead.estimatedValue,
        cityName: lead.cityName,
        status: !_.isEmpty(lead.status)
          ? getLastArray(lead.status, false)
          : "-",
        followUpDate: !_.isEmpty(lead.followUpDate)
          ? moment(lead.followUpDate.timestamp).format("DD-MMM-YYYY")
          : "-",
        expClosureDate: !_.isEmpty(lead.expClosureDate)
          ? moment(lead.expClosureDate.timestamp).format("DD-MMM-YYYY")
          : "-",
        eventDate: !_.isEmpty(lead.eventDate)
          ? moment(lead.eventDate.timestamp).format("DD-MMM-YYYY")
          : "-",
        remarks: lead.remarks,
        rating: lead.rating,
        _status: getLastArray(lead.status, true),
        _followUpDate: !_.isEmpty(lead.followUpDate)
          ? lead.followUpDate.timestamp
          : "-",
      };

      setLeadData(data);
    }
  }, [dataGSL]);

  console.log(dataGSL);

  return (
    <div>
      {appointment && (
        <div className="orderTable">
          <table className="table">
            <tr>
              <td className="cellSelect">Appointment Id:</td>
              <td>{appointment.appointmentId}</td>
              <td className="cellSelect">Appointment Type:</td>
              <td>{appointment.appointmentType}</td>
            </tr>
            <tr>
              <td className="cellSelect">Created Date:</td>
              <td>{appointment.dateRecorded}</td>
              <td className="cellSelect">Name:</td>
              <td>{appointment.name}</td>
            </tr>
            <tr>
              <td className="cellSelect">Appointment Date:</td>
              <td>{appointment.appointmentDate}</td>
              <td className="cellSelect">Appointment Time:</td>
              <td>{appointment.appointmentTime}</td>
            </tr>
            <tr>
              <td className="cellSelect">Handled By:</td>
              <td>{appointment.stylist}</td>
              <td className="cellSelect">status:</td>
              <td>{appointment.status}</td>
            </tr>
            <tr>
              <td className="cellSelect">Reason:</td>
              <td>{appointment.reason}</td>
              <td className="cellSelect"></td>
              <td></td>
            </tr>
          </table>
        </div>
      )}
      <div className="orderTable">
        {leadData && (
          <table className="table">
            <tr>
              <td className="cellSelect">Lead Id:</td>
              <td>{leadData.leadId}</td>
              <td className="cellSelect">Lead Date:</td>
              <td>{leadData.leadDate}</td>
            </tr>

            <tr>
              <td className="cellSelect">Studio:</td>
              <td>{leadData.studioId}</td>
              <td className="cellSelect">Generated By:</td>
              <td>{leadData.generatedBy}</td>
            </tr>
            <tr>
              <td className="cellSelect">Name:</td>
              <td>{leadData.name}</td>
              <td className="cellSelect">Phone No:</td>
              <td>{leadData.phone}</td>
            </tr>
            <tr>
              <td className="cellSelect">Persona:</td>
              <td>{leadData.persona}</td>
              <td className="cellSelect">City:</td>
              <td>{leadData.cityName}</td>
            </tr>

            <tr>
              <td className="cellSelect">Source:</td>
              <td>{leadData.source}</td>
              <td className="cellSelect">Credited To:</td>
              <td>{leadData.creditTo}</td>
            </tr>

            <tr>
              <td className="cellSelect">Exp Closure Date:</td>
              <td>{leadData.expClosureDate}</td>
              <td className="cellSelect">Event Date:</td>
              <td>{leadData.eventDate}</td>
            </tr>

            <tr>
              <td className="cellSelect">Follow Up Date:</td>
              <td>{leadData.followUpDate}</td>
              <td className="cellSelect">Estimated Value:</td>
              <td>{leadData.estimatedValue}</td>
            </tr>

            <tr>
              <td className="cellSelect">Lead Rating:</td>
              <td>{leadData.rating}</td>
              <td className="cellSelect">Remarks:</td>
              <td>{leadData.remarks}</td>
            </tr>
            <tr>
              <td className="cellSelect">Status:</td>
              <td>{leadData.status}</td>
              <td className="cellSelect">Reason</td>
              <td>{leadData._status.note}</td>
            </tr>
          </table>
        )}
      </div>

      <Box display="flex" alignItems="center">
        <Button onClick={onClose} style={{ marginRight: 10 }}>
          Close
        </Button>
      </Box>
    </div>
  );
};

export default AppointmentViewTable;
